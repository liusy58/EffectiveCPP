C Lock-across-unlock-lock-3
//\begin[snippet][labelbase=ln:formal:C-Lock-across-unlock-lock-3:whole,commandchars=\%\@\$]

{}

P0(int *x, spinlock_t *sp)
{
	spin_lock(sp);
	WRITE_ONCE(*x, 1);
	spin_unlock(sp);
}

P1(int *x, int *y, int *z, spinlock_t *sp)
{
	int r1;

	spin_lock(sp);
	r1 = READ_ONCE(*x);
	WRITE_ONCE(*z, 1);
	spin_unlock(sp);
}

P2(int *x, int *y, int *z, spinlock_t *sp)
{
	int r1;
	int r2;

	spin_lock(sp);
	r1 = READ_ONCE(*z);
	r2 = READ_ONCE(*y);
	spin_unlock(sp);
}

P3(int *x, int *y, spinlock_t *sp)
{
	int r1;

	WRITE_ONCE(*y, 1);
	smp_mb();
	r1 = READ_ONCE(*x);
}

//\end[snippet]
exists (1:r1=1 /\ 2:r1=1 /\ 2:r2=0 /\ 3:r1=0)
