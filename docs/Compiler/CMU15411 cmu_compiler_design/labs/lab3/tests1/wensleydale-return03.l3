#test return 4

/* compute the floor of the log_2 of an integer */

int main()
{
	var x:int;
	x = 29;
	return log_2(x);
}

int log_2(x:int)
{
	var count1, count2, mask1, mask2 : int; /* parallel count string */
  	count1 = 0;
	count2 = 0;
	mask1 = (17 << 24) + (17 << 16) + (17 << 8) + 17;
  	mask2 = 15;
 
  x = x | (x >> 1);
  x = x | (x >> 2);
  x = x | (x >> 4);
  x = x | (x >> 8);
  x = x | (x >> 16);
  x = x >> 1;
  count1 = (x & mask1);
  count1 = count1 + ((x >> 1) & mask1);
  count1 = count1 + ((x >> 2) & mask1);
  count1 = count1 + ((x >> 3) & mask1);
  count2 = count1 & mask2;
  count1 = count1 >> 4;
  count2 = count2 + (count1 & mask2);
  count1 = count1 >> 4;
  count2 = count2 + (count1 & mask2);
  count1 = count1 >> 4;
  count2 = count2 + (count1 & mask2);
  count1 = count1 >> 4;
  count2 = count2 + (count1 & mask2);
  count1 = count1 >> 4;
  count2 = count2 + (count1 & mask2);
  count1 = count1 >> 4;
  count2 = count2 + (count1 & mask2);
  count1 = count1 >> 4;
  count2 = count2 + (count1 & mask2);
  return count2;
}