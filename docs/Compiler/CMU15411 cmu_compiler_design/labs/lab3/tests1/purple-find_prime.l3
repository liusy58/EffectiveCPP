#test return 211

int find_sqrt(n : int, upper: int, lower: int)
{
	var mid : int;
	if(upper * upper < n)
	{
	  return find_sqrt(n, upper * 2, upper);
	}
	mid = (upper + lower) / 2;
	if (mid == upper || mid == lower)
	{
		return mid;
	}
	if (mid * mid < n)
	   return find_sqrt(n, upper, mid);
	else
	   return find_sqrt(n, mid, lower);
	  
}
int is_prime(n: int)
{
	var sqrt: int;
	var i: int;
	sqrt = find_sqrt(n, 1, 0);
	for( i = 2 ; i < sqrt; i+=1)
	{
		if (n % i == 0)
		   return 0;
	}
	return 1;
}
int find_prime( n : int)
{
	if (is_prime(n)) 
	   return n;
	else 
	   return find_prime(n+1);
}

int main()
{
	return find_prime(200);
}