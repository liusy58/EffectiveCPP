#test return 53760

int add8 (n1 : int, n2 : int, n3 : int, n4 : int, n5 : int, n6 : int, n7 : int, n8 : int)
{
	return n1 + n2 + n3 + n4 + n5 + n6 + n7 + n8;
}

int succ (i : int)
{
	return i + 1;
}

int main ()
{
	var lol, i : int;

	lol = 0;
	for (i = 0; i < 10; i = succ (i))
	{
		lol +=
		     add8 (
		     	  add8
				(
		     	  	add8 (i + 1, i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8),
		     	  	add8 (i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9),
		     	  	add8 (i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10),
		     	  	add8 (i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10, i + 11),
		     	  	add8 (i + 1, i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8),
		     	  	add8 (i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9),
		     	  	add8 (i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10),
		     	  	add8 (i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10, i + 11)
				),
			  add8
				(
		     	  	add8 (i + 1, i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8),
		     	  	add8 (i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9),
		     	  	add8 (i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10),
		     	  	add8 (i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10, i + 11),
		     	  	add8 (i + 1, i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8),
		     	  	add8 (i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9),
		     	  	add8 (i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10),
		     	  	add8 (i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10, i + 11)
				),
		     	  add8
				(
		     	  	add8 (i + 1, i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8),
		     	  	add8 (i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9),
		     	  	add8 (i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10),
		     	  	add8 (i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10, i + 11),
		     	  	add8 (i + 1, i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8),
		     	  	add8 (i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9),
		     	  	add8 (i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10),
		     	  	add8 (i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10, i + 11)
				),
			  add8
				(
		     	  	add8 (i + 1, i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8),
		     	  	add8 (i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9),
		     	  	add8 (i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10),
		     	  	add8 (i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10, i + 11),
		     	  	add8 (i + 1, i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8),
		     	  	add8 (i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9),
		     	  	add8 (i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10),
		     	  	add8 (i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10, i + 11)
				),
		     	  add8
				(
		     	  	add8 (i + 1, i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8),
		     	  	add8 (i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9),
		     	  	add8 (i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10),
		     	  	add8 (i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10, i + 11),
		     	  	add8 (i + 1, i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8),
		     	  	add8 (i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9),
		     	  	add8 (i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10),
		     	  	add8 (i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10, i + 11)
				),
			  add8
				(
		     	  	add8 (i + 1, i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8),
		     	  	add8 (i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9),
		     	  	add8 (i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10),
		     	  	add8 (i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10, i + 11),
		     	  	add8 (i + 1, i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8),
		     	  	add8 (i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9),
		     	  	add8 (i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10),
		     	  	add8 (i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10, i + 11)
				),
		     	  add8
				(
		     	  	add8 (i + 1, i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8),
		     	  	add8 (i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9),
		     	  	add8 (i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10),
		     	  	add8 (i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10, i + 11),
		     	  	add8 (i + 1, i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8),
		     	  	add8 (i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9),
		     	  	add8 (i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10),
		     	  	add8 (i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10, i + 11)
				),
			  add8
				(
		     	  	add8 (i + 1, i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8),
		     	  	add8 (i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9),
		     	  	add8 (i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10),
		     	  	add8 (i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10, i + 11),
		     	  	add8 (i + 1, i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8),
		     	  	add8 (i + 2, i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9),
		     	  	add8 (i + 3, i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10),
		     	  	add8 (i + 4, i + 5, i + 6, i + 7, i + 8, i + 9, i + 10, i + 11)
				)
			  );
	}

	return lol;
}
