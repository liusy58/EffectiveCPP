#test return 6
# stack language

extern int printchar(c:int);
extern int printint(c:int);

struct stack {
	val : int;
	pre : stack*;
};

stack *push(pre : stack*, val : int)
{
	var t : stack*;
	t = new(stack);
	t->val = val;
	t->pre = pre;
	return t;
}

stack *pop(t : stack*)
{
	return t->pre;
}

int main()
{
	var op,a,b : int;
	var i,d : stack*;

	d = push(NULL, 1);
	d = push(d, 7);
	d = push(d, 1);
	d = push(d, 4);
	d = push(d, 5);

	i = push(NULL, 0);
	i = push(i, 3);
	i = push(i, 1);
	i = push(i, 2);

	while (i != NULL)
	{
		op = i->val;
		i = pop(i);
		if (op == 0) {
			return d->val;
		} else if (op == 1) {
			a = d->val; d = pop(d);
			b = d->val; d = pop(d);
			d = push(d, a + b);
		} else if (op == 2) {
			a = d->val; d = pop(d);
			b = d->val; d = pop(d);
			d = push(d, a - b);
		} else if (op == 3) {
			a = d->val; d = pop(d);
			i = push(i, a);
		} else {
			printchar(73);
			printint(op);
			return -1;
		}
	}

	return -1;
}
