#test return 1
//very very slow way of generating primes

int nth_prime(x:int)
{
  var last_prime:int;
  var i:int;

  if ( x < 0)
     return ~0;
  
  if (x == 0 )
     return 2;
  
  last_prime = nth_prime(x-1);
  
  for(i =last_prime +1; !is_prime(i,x-1); i+=1)
    ;

  return i;
}

bool is_prime(x:int, p:int)
{ 
  var i:int;

  for(i=0; i<=p; i+=1)
    if ( x% nth_prime(p-i) == 0)
        return false;

  return true; 
}

int main()
{
  return true && true && true&& true&& true&& true&& true&& true&& true&&
true && true && true&& true&& true&& true&& true&& true&& true&&
true && true && true&& true&& true&& true&& true&& true&& true&&
true && true && true&& true&& true&& true&& true&& true&& true&&
true && true && true&& true&& true&& true&& true&& true&& true&&
    nth_prime(0)==2 && 
    nth_prime(1)==3 && 
    nth_prime(2)==5 && 
    nth_prime(3)==7 && 
    nth_prime(4)==11 && 
    nth_prime(5)==13 && 
    nth_prime(6)==17 && 
    nth_prime(7)==19 && 
    nth_prime(8)==23 && 
    nth_prime(9)==29 && 
    nth_prime(10)==31 && 
    nth_prime(11)==37
? 1 : 0; 
}
