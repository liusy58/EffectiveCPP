%!PS-Adobe-2.0
%%Title: |gnuplotepsfixdc > rwlockRCUperf.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Sun Nov 25 08:50:17 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 302 300
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -33 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Helvetica) findfont 100 scalefont setfont
1.000 UL
LTb
630 300 M
63 0 V
1657 0 R
-63 0 V
570 300 M
gsave 0 setgray
( 1e-05) Rshow
grestore
1.000 UL
LTb
630 358 M
31 0 V
1689 0 R
-31 0 V
630 434 M
31 0 V
1689 0 R
-31 0 V
630 473 M
31 0 V
1689 0 R
-31 0 V
630 491 M
63 0 V
1657 0 R
-63 0 V
570 491 M
gsave 0 setgray
( 1e-04) Rshow
grestore
1.000 UL
LTb
630 549 M
31 0 V
1689 0 R
-31 0 V
630 625 M
31 0 V
1689 0 R
-31 0 V
630 664 M
31 0 V
1689 0 R
-31 0 V
630 682 M
63 0 V
1657 0 R
-63 0 V
570 682 M
gsave 0 setgray
( 0.001) Rshow
grestore
1.000 UL
LTb
630 740 M
31 0 V
1689 0 R
-31 0 V
630 816 M
31 0 V
1689 0 R
-31 0 V
630 855 M
31 0 V
1689 0 R
-31 0 V
630 873 M
63 0 V
1657 0 R
-63 0 V
570 873 M
gsave 0 setgray
( 0.01) Rshow
grestore
1.000 UL
LTb
630 931 M
31 0 V
1689 0 R
-31 0 V
630 1007 M
31 0 V
1689 0 R
-31 0 V
630 1046 M
31 0 V
1689 0 R
-31 0 V
630 1064 M
63 0 V
1657 0 R
-63 0 V
-1717 0 R
gsave 0 setgray
( 0.1) Rshow
grestore
1.000 UL
LTb
630 1122 M
31 0 V
1689 0 R
-31 0 V
630 1198 M
31 0 V
1689 0 R
-31 0 V
630 1237 M
31 0 V
1689 0 R
-31 0 V
630 1256 M
63 0 V
1657 0 R
-63 0 V
-1717 0 R
gsave 0 setgray
( 1) Rshow
grestore
1.000 UL
LTb
630 1313 M
31 0 V
1689 0 R
-31 0 V
630 1389 M
31 0 V
1689 0 R
-31 0 V
630 1428 M
31 0 V
1689 0 R
-31 0 V
630 1447 M
63 0 V
1657 0 R
-63 0 V
-1717 0 R
gsave 0 setgray
( 10) Rshow
grestore
1.000 UL
LTb
630 1504 M
31 0 V
1689 0 R
-31 0 V
630 1580 M
31 0 V
1689 0 R
-31 0 V
630 1619 M
31 0 V
1689 0 R
-31 0 V
630 1638 M
63 0 V
1657 0 R
-63 0 V
-1717 0 R
gsave 0 setgray
( 100) Rshow
grestore
1.000 UL
LTb
630 1695 M
31 0 V
1689 0 R
-31 0 V
630 1771 M
31 0 V
1689 0 R
-31 0 V
630 1810 M
31 0 V
1689 0 R
-31 0 V
630 1829 M
63 0 V
1657 0 R
-63 0 V
-1717 0 R
gsave 0 setgray
( 1000) Rshow
grestore
1.000 UL
LTb
630 1886 M
31 0 V
1689 0 R
-31 0 V
630 1962 M
31 0 V
1689 0 R
-31 0 V
630 2001 M
31 0 V
1689 0 R
-31 0 V
630 2020 M
63 0 V
1657 0 R
-63 0 V
-1717 0 R
gsave 0 setgray
( 10000) Rshow
grestore
1.000 UL
LTb
630 300 M
0 63 V
0 1657 R
0 -63 V
630 200 M
gsave 0 setgray
( 0) Cshow
grestore
1.000 UL
LTb
845 300 M
0 63 V
0 1657 R
0 -63 V
845 200 M
gsave 0 setgray
( 2) Cshow
grestore
1.000 UL
LTb
1060 300 M
0 63 V
0 1657 R
0 -63 V
0 -1757 R
gsave 0 setgray
( 4) Cshow
grestore
1.000 UL
LTb
1275 300 M
0 63 V
0 1657 R
0 -63 V
0 -1757 R
gsave 0 setgray
( 6) Cshow
grestore
1.000 UL
LTb
1490 300 M
0 63 V
0 1657 R
0 -63 V
0 -1757 R
gsave 0 setgray
( 8) Cshow
grestore
1.000 UL
LTb
1705 300 M
0 63 V
0 1657 R
0 -63 V
0 -1757 R
gsave 0 setgray
( 10) Cshow
grestore
1.000 UL
LTb
1920 300 M
0 63 V
0 1657 R
0 -63 V
0 -1757 R
gsave 0 setgray
( 12) Cshow
grestore
1.000 UL
LTb
2135 300 M
0 63 V
0 1657 R
0 -63 V
0 -1757 R
gsave 0 setgray
( 14) Cshow
grestore
1.000 UL
LTb
2350 300 M
0 63 V
0 1657 R
0 -63 V
0 -1757 R
gsave 0 setgray
( 16) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
630 300 M
1720 0 V
0 1720 V
-1720 0 V
630 300 L
LTb
100 1160 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(Overhead \(nanoseconds\)) Cshow
grestore
grestore
LTb
1490 50 M
gsave 0 setgray
(Number of CPUs) Cshow
grestore
1.000 UP
LTb
2243 653 M
gsave 0 setgray
(rcu) Rshow
grestore
LTb
2243 1829 M
gsave 0 setgray
(rwlock) Rshow
grestore
1.000 UL
LT0
738 490 M
107 2 V
108 -2 V
107 1 V
108 0 V
107 0 V
108 0 V
107 -1 V
108 16 V
107 14 V
108 14 V
107 12 V
108 -6 V
107 23 V
108 15 V
107 3 V
1.000 UP
1.000 UL
LT1
738 488 M
0 3 V
-31 -3 R
62 0 V
-62 3 R
62 0 V
76 -7 R
0 15 V
814 484 M
62 0 V
-62 15 R
62 0 V
77 -11 R
0 3 V
-31 -3 R
62 0 V
-62 3 R
62 0 V
76 -3 R
0 6 V
-31 -6 R
62 0 V
-62 6 R
62 0 V
77 -5 R
0 4 V
-31 -4 R
62 0 V
-62 4 R
62 0 V
76 -4 R
0 4 V
-31 -4 R
62 0 V
-62 4 R
62 0 V
77 -4 R
0 4 V
-31 -4 R
62 0 V
-62 4 R
62 0 V
76 -4 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
77 1 R
0 26 V
-31 -26 R
62 0 V
-62 26 R
62 0 V
76 -17 R
0 33 V
-31 -33 R
62 0 V
-62 33 R
62 0 V
77 -22 R
0 39 V
-31 -39 R
62 0 V
-62 39 R
62 0 V
76 -36 R
0 53 V
-31 -53 R
62 0 V
-62 53 R
62 0 V
77 -48 R
0 37 V
-31 -37 R
62 0 V
-62 37 R
62 0 V
76 -39 R
0 75 V
-31 -75 R
62 0 V
-62 75 R
62 0 V
77 -57 R
0 69 V
-31 -69 R
62 0 V
-62 69 R
62 0 V
76 -44 R
0 36 V
-31 -36 R
62 0 V
-62 36 R
62 0 V
738 490 Pls
845 492 Pls
953 490 Pls
1060 491 Pls
1168 491 Pls
1275 491 Pls
1383 491 Pls
1490 490 Pls
1598 506 Pls
1705 520 Pls
1813 534 Pls
1920 546 Pls
2028 540 Pls
2135 563 Pls
2243 578 Pls
2350 581 Pls
1.000 UL
LT2
738 1592 M
107 126 V
108 54 V
107 30 V
108 19 V
107 16 V
108 14 V
107 10 V
108 9 V
107 9 V
108 10 V
107 9 V
108 6 V
107 4 V
108 5 V
107 15 V
1.000 UP
1.000 UL
LT3
738 1592 M
-31 0 R
62 0 V
-62 0 R
62 0 V
76 115 R
0 20 V
-31 -20 R
62 0 V
-62 20 R
62 0 V
77 26 R
0 34 V
-31 -34 R
62 0 V
-62 34 R
62 0 V
76 13 R
0 4 V
-31 -4 R
62 0 V
-62 4 R
62 0 V
77 9 R
0 16 V
-31 -16 R
62 0 V
-62 16 R
62 0 V
76 0 R
0 15 V
-31 -15 R
62 0 V
-62 15 R
62 0 V
77 -1 R
0 16 V
-31 -16 R
62 0 V
-62 16 R
62 0 V
76 -6 R
0 15 V
-31 -15 R
62 0 V
-62 15 R
62 0 V
77 -14 R
0 29 V
-31 -29 R
62 0 V
-62 29 R
62 0 V
76 -19 R
0 28 V
-31 -28 R
62 0 V
-62 28 R
62 0 V
77 -18 R
0 27 V
-31 -27 R
62 0 V
-62 27 R
62 0 V
76 -15 R
0 23 V
-31 -23 R
62 0 V
-62 23 R
62 0 V
77 -19 R
0 27 V
-31 -27 R
62 0 V
-62 27 R
62 0 V
76 -21 R
0 23 V
-31 -23 R
62 0 V
-62 23 R
62 0 V
77 -17 R
0 20 V
-31 -20 R
62 0 V
-62 20 R
62 0 V
76 -4 R
0 20 V
-31 -20 R
62 0 V
-62 20 R
62 0 V
738 1592 Crs
845 1718 Crs
953 1772 Crs
1060 1802 Crs
1168 1821 Crs
1275 1837 Crs
1383 1851 Crs
1490 1861 Crs
1598 1870 Crs
1705 1879 Crs
1813 1889 Crs
1920 1898 Crs
2028 1904 Crs
2135 1908 Crs
2243 1913 Crs
2350 1928 Crs
1.000 UL
LTb
630 300 M
1720 0 V
0 1720 V
-1720 0 V
630 300 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
