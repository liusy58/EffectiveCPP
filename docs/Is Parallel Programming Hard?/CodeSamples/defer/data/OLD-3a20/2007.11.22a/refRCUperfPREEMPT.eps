%!PS-Adobe-2.0
%%Title: |gnuplotepsfixdc > refRCUperfPREEMPT.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Sun Nov 25 08:54:30 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 302 300
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -33 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Helvetica) findfont 100 scalefont setfont
1.000 UL
LTb
630 300 M
63 0 V
1657 0 R
-63 0 V
570 300 M
gsave 0 setgray
( 1) Rshow
grestore
1.000 UL
LTb
630 429 M
31 0 V
1689 0 R
-31 0 V
630 505 M
31 0 V
1689 0 R
-31 0 V
630 559 M
31 0 V
1689 0 R
-31 0 V
630 601 M
31 0 V
1689 0 R
-31 0 V
630 635 M
31 0 V
1689 0 R
-31 0 V
630 663 M
31 0 V
1689 0 R
-31 0 V
630 688 M
31 0 V
1689 0 R
-31 0 V
630 710 M
31 0 V
1689 0 R
-31 0 V
630 730 M
63 0 V
1657 0 R
-63 0 V
570 730 M
gsave 0 setgray
( 10) Rshow
grestore
1.000 UL
LTb
630 859 M
31 0 V
1689 0 R
-31 0 V
630 935 M
31 0 V
1689 0 R
-31 0 V
630 989 M
31 0 V
1689 0 R
-31 0 V
630 1031 M
31 0 V
1689 0 R
-31 0 V
630 1065 M
31 0 V
1689 0 R
-31 0 V
630 1093 M
31 0 V
1689 0 R
-31 0 V
630 1118 M
31 0 V
1689 0 R
-31 0 V
630 1140 M
31 0 V
1689 0 R
-31 0 V
630 1160 M
63 0 V
1657 0 R
-63 0 V
-1717 0 R
gsave 0 setgray
( 100) Rshow
grestore
1.000 UL
LTb
630 1289 M
31 0 V
1689 0 R
-31 0 V
630 1365 M
31 0 V
1689 0 R
-31 0 V
630 1419 M
31 0 V
1689 0 R
-31 0 V
630 1461 M
31 0 V
1689 0 R
-31 0 V
630 1495 M
31 0 V
1689 0 R
-31 0 V
630 1523 M
31 0 V
1689 0 R
-31 0 V
630 1548 M
31 0 V
1689 0 R
-31 0 V
630 1570 M
31 0 V
1689 0 R
-31 0 V
630 1590 M
63 0 V
1657 0 R
-63 0 V
-1717 0 R
gsave 0 setgray
( 1000) Rshow
grestore
1.000 UL
LTb
630 1719 M
31 0 V
1689 0 R
-31 0 V
630 1795 M
31 0 V
1689 0 R
-31 0 V
630 1849 M
31 0 V
1689 0 R
-31 0 V
630 1891 M
31 0 V
1689 0 R
-31 0 V
630 1925 M
31 0 V
1689 0 R
-31 0 V
630 1953 M
31 0 V
1689 0 R
-31 0 V
630 1978 M
31 0 V
1689 0 R
-31 0 V
630 2000 M
31 0 V
1689 0 R
-31 0 V
630 2020 M
63 0 V
1657 0 R
-63 0 V
-1717 0 R
gsave 0 setgray
( 10000) Rshow
grestore
1.000 UL
LTb
630 300 M
0 63 V
0 1657 R
0 -63 V
630 200 M
gsave 0 setgray
( 0) Cshow
grestore
1.000 UL
LTb
845 300 M
0 63 V
0 1657 R
0 -63 V
845 200 M
gsave 0 setgray
( 2) Cshow
grestore
1.000 UL
LTb
1060 300 M
0 63 V
0 1657 R
0 -63 V
0 -1757 R
gsave 0 setgray
( 4) Cshow
grestore
1.000 UL
LTb
1275 300 M
0 63 V
0 1657 R
0 -63 V
0 -1757 R
gsave 0 setgray
( 6) Cshow
grestore
1.000 UL
LTb
1490 300 M
0 63 V
0 1657 R
0 -63 V
0 -1757 R
gsave 0 setgray
( 8) Cshow
grestore
1.000 UL
LTb
1705 300 M
0 63 V
0 1657 R
0 -63 V
0 -1757 R
gsave 0 setgray
( 10) Cshow
grestore
1.000 UL
LTb
1920 300 M
0 63 V
0 1657 R
0 -63 V
0 -1757 R
gsave 0 setgray
( 12) Cshow
grestore
1.000 UL
LTb
2135 300 M
0 63 V
0 1657 R
0 -63 V
0 -1757 R
gsave 0 setgray
( 14) Cshow
grestore
1.000 UL
LTb
2350 300 M
0 63 V
0 1657 R
0 -63 V
0 -1757 R
gsave 0 setgray
( 16) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
630 300 M
1720 0 V
0 1720 V
-1720 0 V
630 300 L
LTb
100 1160 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(Overhead \(nanoseconds\)) Cshow
grestore
grestore
LTb
1490 50 M
gsave 0 setgray
(Number of CPUs) Cshow
grestore
1.000 UP
LTb
2243 710 M
gsave 0 setgray
(rcu) Rshow
grestore
LTb
2243 1666 M
gsave 0 setgray
(refcnt) Rshow
grestore
1.000 UL
LT0
738 636 M
107 -4 V
108 -1 V
107 -7 V
108 0 V
107 -4 V
108 -2 V
107 0 V
108 1 V
107 1 V
108 1 V
107 0 V
108 0 V
107 1 V
108 0 V
107 1 V
1.000 UP
1.000 UL
LT1
738 630 M
0 12 V
707 630 M
62 0 V
-62 12 R
62 0 V
76 -21 R
0 21 V
814 621 M
62 0 V
-62 21 R
62 0 V
77 -24 R
0 24 V
922 618 M
62 0 V
-62 24 R
62 0 V
76 -27 R
0 18 V
-31 -18 R
62 0 V
-62 18 R
62 0 V
77 -15 R
0 11 V
-31 -11 R
62 0 V
-62 11 R
62 0 V
76 -12 R
0 6 V
-31 -6 R
62 0 V
-62 6 R
62 0 V
77 -6 R
0 3 V
-31 -3 R
62 0 V
-62 3 R
62 0 V
76 -3 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
77 -3 R
0 7 V
-31 -7 R
62 0 V
-62 7 R
62 0 V
76 -4 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
77 -1 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
76 -1 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
77 -6 R
0 10 V
-31 -10 R
62 0 V
-62 10 R
62 0 V
76 -5 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
77 -2 R
0 3 V
-31 -3 R
62 0 V
-62 3 R
62 0 V
76 -2 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
738 636 Pls
845 632 Pls
953 631 Pls
1060 624 Pls
1168 624 Pls
1275 620 Pls
1383 618 Pls
1490 618 Pls
1598 619 Pls
1705 620 Pls
1813 621 Pls
1920 621 Pls
2028 621 Pls
2135 622 Pls
2243 622 Pls
2350 623 Pls
1.000 UP
1.000 UL
LT2
738 1078 M
0 11 V
-31 -11 R
62 0 V
-62 11 R
62 0 V
76 297 R
0 91 V
-31 -91 R
62 0 V
-62 91 R
62 0 V
77 57 R
0 108 V
922 1534 M
62 0 V
-62 108 R
62 0 V
76 -13 R
0 43 V
-31 -43 R
62 0 V
-62 43 R
62 0 V
77 -46 R
0 49 V
-31 -49 R
62 0 V
-62 49 R
62 0 V
76 -60 R
0 43 V
-31 -43 R
62 0 V
-62 43 R
62 0 V
77 -31 R
0 25 V
-31 -25 R
62 0 V
-62 25 R
62 0 V
76 3 R
0 4 V
-31 -4 R
62 0 V
-62 4 R
62 0 V
77 -4 R
0 50 V
-31 -50 R
62 0 V
-62 50 R
62 0 V
76 -31 R
0 52 V
-31 -52 R
62 0 V
-62 52 R
62 0 V
77 -36 R
0 56 V
-31 -56 R
62 0 V
-62 56 R
62 0 V
76 -48 R
0 72 V
-31 -72 R
62 0 V
-62 72 R
62 0 V
77 -55 R
0 69 V
-31 -69 R
62 0 V
-62 69 R
62 0 V
76 -52 R
0 61 V
-31 -61 R
62 0 V
-62 61 R
62 0 V
77 -41 R
0 44 V
-31 -44 R
62 0 V
-62 44 R
62 0 V
76 -15 R
0 5 V
-31 -5 R
62 0 V
-62 5 R
62 0 V
738 1083 Crs
845 1437 Crs
953 1595 Crs
1060 1652 Crs
1168 1652 Crs
1275 1638 Crs
1383 1640 Crs
1490 1657 Crs
1598 1682 Crs
1705 1702 Crs
1813 1720 Crs
1920 1738 Crs
2028 1753 Crs
2135 1765 Crs
2243 1775 Crs
2350 1784 Crs
1.000 UL
LT3
738 1083 M
107 354 V
108 158 V
107 57 V
108 0 V
107 -14 V
108 2 V
107 17 V
108 25 V
107 20 V
108 18 V
107 18 V
108 15 V
107 12 V
108 10 V
107 9 V
1.000 UL
LTb
630 300 M
1720 0 V
0 1720 V
-1720 0 V
630 300 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
