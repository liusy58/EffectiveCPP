#test return 22016063
int do_sad_combine(vec1:int, block:int)
{
	var curblock, diff, i, x:int;

	x = 0;
	for(i = 0; i < 8; i = i + 1) {
		curblock = (vec1 >> (i * 2)) & 255;
		diff = curblock - block;
		if(diff < 0)
			diff = -diff;
		if(diff > 15)
			diff = 15;
		x |= ((diff & 15) << (i * 4));
	}

	return x;

}

int mpsadbw(vec1: int, vec2: int, sel: int)
{
	if(sel >> 2 & 1)
		vec1 = vec1 >> 8;
	if(sel & 3 == 0)
		vec2 = vec2 & 15;
	if(sel & 3 == 1)
		vec2 = (vec2 >> 8) & 15;
	if(sel & 3 == 2)
		vec2 = (vec2 >> 16) & 15;
	if(sel & 3 == 3)
		vec2 = (vec2 >> 24) & 15;

	return do_sad_combine(vec1, vec2);
}

int main()
{
	var x, y: int;

	        /* 0x00ffeff0, 0xff */
	x = mpsadbw(16773104, 255, 0);
	y = 0;
	return x;
}
