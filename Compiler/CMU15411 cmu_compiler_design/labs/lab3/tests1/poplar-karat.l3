#test return 0
// Karatsuba multiplication

//extern int abs(v : int);

int abs(v : int)
{
        if (v >= 0)
                return v;
        else
                return -v;
}

int digits(n : int)
{
        if (!n)
                return 0;
        else
                return 1 + digits(n >> 1);
}

int mult(a : int, b : int)
{
        var n, a0, a1, b0, b1, x, y, z : int;
        if (a == 0 || b == 0)
                return 0;
        if (a == 1)
                return b;
        if (b == 1)
                return a;
        n = digits(a)/2;
        a1 = a >> n;
        a0 = a & ((1 << n) - 1);
        b1 = b >> n;
        b0 = b & ((1 << n) - 1);
        x = mult(a1, b1);
        y = mult(a0, b0);
        z = mult(a1 + a0, b1 + b0) - x - y;
        return ((x << n) << n) + (z << n) + y;
}

int main()
{
        var i, j, sum : int;
        sum = 0;
        for (i = 34; i < 72; i += 1)
                for (j = 23; j < 32; j += 1)
                        sum += abs(mult(i, j) - i*j);
        return sum;
}
