#test return 108
// Test Break and Continue Functionality

// = 2^FLOOR((n+1)/2)
int getContinue(n : int) {
	var accumulator, i : int;
	accumulator = 2;

	for(i=0; i < n; i+=1) {
		if((i % 2) == 0) 
			continue;
		accumulator *= 2;		
	}

	return accumulator;
}

// = n * n = n^2
int getBreak(n : int) {
	var accumulator, i, j : int;
	accumulator = 0;
	i = 0;
	// n * n = n^2
	while(i < n) {

		// 2 * (n/2) = n
		j = 0;
		while(j < n) {
			if(j >= (n/2)) break;
			accumulator += 2;
			j+=1;
		}

		i += 1;
	}

	return accumulator;
}

int main() {
	var a,b : int;
	a = getContinue(5); // 2^FLOOR((n+1/2)) = 2^3 = 8  
	b = getBreak(10); // n^2 = 100

	return a + b; // 108
}
